"""
MineScan Exploits Package
Contains modules for testing and exploiting various Minecraft server vulnerabilities
"""

from .rcon import RCONExploit
from .plugins import PluginExploit
from .server import ServerInfoChecker

__version__ = "1.0.0"
__author__ = "MineScan Development Team"

# Expose key classes
__all__ = [
    'RCONExploit',
    'PluginExploit',
    'ServerInfoChecker'
]

# Package metadata
PACKAGE_INFO = {
    'name': 'minescan-exploits',
    'version': __version__,
    'description': 'Minecraft server vulnerability testing modules',
    'modules': {
        'rcon': 'RCON protocol exploitation testing',
        'plugins': 'Plugin vulnerability detection and testing',
        'server': 'Server information gathering'
    },
    'capabilities': [
        'RCON authentication testing',
        'Plugin vulnerability scanning',
        'Version-based vulnerability detection',
        'Safe exploitation simulation',
        'Server information gathering'
    ]
}

def get_supported_exploits():
    """Return information about supported exploit modules"""
    return {
        'rcon': {
            'class': RCONExploit,
            'description': 'Tests RCON protocol security',
            'safe_mode': True
        },
        'plugins': {
            'class': PluginExploit,
            'description': 'Tests plugin vulnerabilities',
            'safe_mode': True
        },
        'server': {
            'class': ServerInfoChecker,
            'description': 'Gathers server information',
            'safe_mode': True
        }
    }

def is_safe_mode_supported(exploit_name: str) -> bool:
    """Check if an exploit module supports safe mode operation"""
    exploits = get_supported_exploits()
    return exploits.get(exploit_name, {}).get('safe_mode', False)

def get_exploit_class(exploit_name: str):
    """Get the exploit class by name"""
    exploits = get_supported_exploits()
    exploit_info = exploits.get(exploit_name)
    if exploit_info:
        return exploit_info['class']
    raise ValueError(f"Unsupported exploit: {exploit_name}")
